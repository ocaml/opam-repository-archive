opam-version: "2.0"
maintainer:   "thomas@gazagnaire.org"
authors:      "Thomas Gazagnaire"
license:      "ISC"
homepage:     "https://github.com/mirage/ocaml-git"
bug-reports:  "https://github.com/mirage/ocaml-git/issues"
dev-repo: "git+https://github.com/mirage/ocaml-git.git"
build: [
  [
    "./configure"
    "--prefix"
    prefix
    "--%{mirage-http+mirage-flow+mirage-types-lwt+channel:enable}%-mirage"
    "--%{conduit+cohttp+camlzip+nocrypto+base-unix:enable}%-unix"
  ]
  [make]
  ["./configure" "--enable-tests" "--enable-mirage" "--enable-unix"]
    {with-test}
  [make "test"] {with-test}
]
install: [make "install"]
remove: ["ocamlfind" "remove" "git"]
depends: [
  "ocaml" {>= "4.01.0"}
  "cmdliner" {< "1.0.0"}
  "mstruct" {>= "1.3.1" & = "1.4.0"}
  "ocamlgraph" {<= "2.2.0"}
  "uri" {>= "1.3.12" & <= "4.4.0"}
  "lwt" {>= "2.4.7" & <= "5.9.1"}
  "mtime" {< "1.0.0"}
  "logs" {<= "0.8.0"}
  "fmt" {<= "0.10.0"}
  "hex" {<= "1.5.0"}
  "astring" {<= "0.8.5"}
  "crc" {<= "1.0.0"}
  "ocplib-endian" {<= "1.2"}
  "alcotest" {with-test & <= "1.9.0"}
  "mirage-types-lwt" {with-test & < "3.7.0"}
  "mirage-http" {with-test}
  "mirage-flow" {with-test & < "2.0.0"}
  "channel" {with-test}
  "mirage-fs-unix" {with-test & >= "1.1.4" & <= "1.7.0"}
  "cohttp" {with-test & <= "6.1.1"}
  "conduit" {with-test & <= "8.0.0"}
  "base-unix" {with-test & = "base"}
  "camlzip" {with-test & <= "1.13"}
  "nocrypto" {with-test & <= "0.5.4-2"}
]
depopts: [
  # --enable-mirage
  "mirage-types-lwt"
  "mirage-http"
  "mirage-flow"
  "channel"
  # --enable-unix
  "cohttp"
  "conduit"
  "base-unix"
  "camlzip"
  "nocrypto"
]
conflicts: [
 "cohttp"   {< "0.19.1"}
 "cohttp"   {>= "0.99.0"}
 "conduit" {< "0.8.4" | >= "3.0.0"}
 "conduit"  {>= "0.99"}
 "alcotest" {< "0.4.0"}
 "camlzip"  {< "1.05"}
 "nocrypto" {< "0.2.0"}
 "mirage-flow" {> "1.1.0"}
 "cstruct"  {> "3.1.1"}
]
synopsis: "Git format and protocol in pure OCaml"
description: """
Support for on-disk and in-memory Git stores. Can read and write all
the Git objects: the usual blobs, trees, commits and tags but also the
pack files, pack indexes and the index file (where the staging area
lives).

All the objects share a consistent API, and convenience functions are
provided to manipulate the different objects. For instance, it is
possible to make a pack file position independant (as the Zlib
compression might change the relative offsets between the packed
objects), to generate pack indexes from pack files, or to expand
the filesystem of a given commit.

The library comes with a command-line tool called `ogit` which shares
a similar interface with `git`, but where all operations are mapped to
the API exposed `ocaml-git` (and hence using only OCaml code)."""
flags: light-uninstall
url {
  src: "https://github.com/mirage/ocaml-git/archive/1.8.0.tar.gz"
  checksum: [
    "sha256=faa4673ecb5695c72577896cbb6817a678e978ab4b3d2e38b72b7a1e6ac7dcdc"
    "md5=15565eb2875b3c1d37875f3b2a1da753"
  ]
}
x-opam-repository-commit-hash-at-time-of-archiving:
  "08d8c16c16dc6b23a5278b06dff0ac6c7a217356"
x-reason-for-archiving: ["maintenance-intent"]
